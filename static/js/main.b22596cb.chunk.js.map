{"version":3,"sources":["features/Navigation/navigationSlice.js","app/lib/values.js","features/Events/eventsSlice.js","features/Competitors/competitorsSlice.js","app/reducer.js","app/lib/helpers.js","app/selectors.js","features/AuthWall/AuthWall.js","features/Navigation/TopNavigation/TopNavigation.js","features/Navigation/BottomNavigation/BottomNavigation.js","app/styleHooks.js","app/lib/hooks/useInterval.js","features/Events/EventList/EventList.js","app/lib/getters/year.js","features/Events/EventManager/EventManager.js","features/Competitors/CompetitorList/CompetitorList.js","features/Competitors/CompetitorManager/CompetitorManager.js","app/lib/getters/points.js","features/WorkSpace/lib/util.js","app/lib/getters/weights.js","app/lib/hooks/useFilters.js","features/WorkSpace/GymnasticsList/GymnasticsList.js","features/WorkSpace/WorkSpace.js","App.js","reportWebVitals.js","index.js","features/Navigation/BottomNavigation/BottomNavigation.module.css"],"names":["steps","ActiveContent","ContentToStep","getStepFromContent","content","navigationSlice","createSlice","name","initialState","activeContent","activeStep","reducers","setActiveContent","state","action","payload","setActiveStep","step","keys","Object","i","length","key","getContentFromStep","actions","Gender","FEMALE","MALE","Ages","Group","A","B","AgesPerGroup","Discipline","PUSH","PULL","PULL_UP","T2B","SCHO","H1","LT","DR_M","SW","SD","PL","GYM","Exceptional","GYMNASTICS","getDraftEvent","id","date","Date","toISOString","split","place","host","start","disciplines","values","reduce","r","e","gymnastics","competitorIds","getEvents","createAsyncThunk","ids","a","requestService","post","baseUrl","deleteEvent","get","saveEvent","event","eventsSlice","all","activeId","draft","resetEvents","setEventId","addCompetitorId","push","removeCompetitorId","activeEvent","splice","indexOf","editEvent","setName","setDate","setPlace","setHost","setStart","toggleDiscipline","setGymnastics","group","extraReducers","fulfilled","Array","isArray","console","warn","success","Number","getDraftCompetitor","gender","year","weight","club","results","getCompetitors","deleteCompetitor","saveCompetitor","competitor","competitorsSlice","resetCompetitors","editCompetitor","setGender","setYear","setWeight","setClub","setResult","eventId","competitorId","discipline","result","reducer","navigation","events","competitors","defaultValues","ARRAY","OBJECT","FUNCTION","selectActiveEvent","selectActiveCompetitors","includes","AuthWall","useState","open","setOpen","Dialog","onClose","aria-labelledby","DialogContent","TextField","autoFocus","margin","label","className","type","fullWidth","onChange","target","value","ColorlibConnector","withStyles","alternativeLabel","top","active","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","StepConnector","useColorlibStepIconStyles","makeStyles","root","zIndex","color","width","display","justifyContent","alignItems","cursor","boxShadow","ColorlibStepIcon","props","classes","icons","1","2","3","String","icon","TopNavigation","dispatch","useDispatch","useSelector","Stepper","connector","map","Step","onClick","StepLabel","StepIconComponent","BottomNavigation","vw","harbor","cw","onCta","ctaIcon","ctaColor","log","s","style","Cta","Fab","aria-label","useListStyles","theme","card","cardActive","palette","secondary","light","cardContent","gridTemplateColumns","cardActions","justifySelf","alignSelf","contrastText","grey","gymnasticsTag","primary","main","useManagerStyles","flexRow","gridRow","gridGap","spacer","flexShrink","marginTop","useWorkSpaceStyles","row","editor","editorEntry","flexWrap","editorIcon","editorPoints","marginLeft","gymnasticsResult","useFilterStyles","filter","filterGroup","marginRight","useInterval","interval","cb","setActive","idRef","useRef","useEffect","req","current","setTimeout","clearTimeout","EventList","activeEventId","eventList","setEventList","deleteIndex","setDeleteIndex","refresh","useCallback","isObject","sort","b","getTime","Card","elevation","CardContent","Typography","variant","reverse","join","CardActions","IconButton","stopPropagation","Button","paragraph","getAge","birthYear","getFullYear","getBirthYear","age","marginProp","EventManager","saveAndExit","onKeyDown","noValidate","autoComplete","inputProps","FormGroup","FormControlLabel","control","Checkbox","checked","ages","multiline","rowsMax","CompetitorList","selectedCompetitorIds","competitorList","setCompetitorList","doSave","setDoSave","charCodeAt","noActiveEvent","selected","CompetitorManager","FormControl","InputLabel","Select","labelId","MenuItem","createTable","inStart","inEnd","outStart","outEnd","val","Math","max","round","getters","calcPointsForExceptional","getPoints","disc","fn","getRanks","ranksByGroups","forEach","curPoints","curRank","rankings","points","k","rank","c","ranking","find","addRanks","weights","WeightType","weightDisciplines","useFilters","filters","filterCallback","setFilterCallback","filterList","setFilterList","element","every","ButtonGroup","prevState","undefined","GymnasticsList","gymnasticsList","gymResults","setGymResults","overflow","textOverflow","WorkSpace","activeCompetitorId","setActiveCompetitorId","FilterComponent","sync","bodyWeight","weightValue","getWeight","getContent","App","vh","activeEventName","document","title","min","bg","css","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setBaseUrl","options","global","contentSize","maxContentWidth","fonts","body","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b22596cb.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const steps = [ 'Erstellen', 'Teilnehmer', 'Wettbewerb' ];\n\nexport const ActiveContent = {\n    EVENT_LIST: 'event-list',\n    EVENT_MANAGER: 'event-manager',\n    COMPETITOR_LIST: 'competitor-list',\n    COMPETITOR_MANAGER: 'competitor-manager',\n    WORK_SPACE: 'work-space'\n};\n\nconst ContentToStep = {\n    [ActiveContent.EVENT_LIST]: 'Erstellen',\n    [ActiveContent.EVENT_MANAGER]: 'Erstellen',\n    [ActiveContent.COMPETITOR_LIST]: 'Teilnehmer',\n    [ActiveContent.COMPETITOR_MANAGER]: 'Teilnehmer',\n    [ActiveContent.WORK_SPACE]: 'Wettbewerb'\n};\n\nfunction getStepFromContent(content) {\n    return ContentToStep[content];\n}\n\nfunction getContentFromStep(step) {\n    const keys = Object.keys(ContentToStep);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (ContentToStep[key] === step) {\n            return key;\n        }\n    }\n}\n\nexport const navigationSlice = createSlice({\n    name: 'navigation',\n    initialState: {\n        activeContent: ActiveContent.EVENT_LIST,\n        activeStep: getStepFromContent(ActiveContent.EVENT_LIST)\n    },\n    reducers: {\n        setActiveContent: (state, action) => {\n            state.activeContent = action.payload;\n            state.activeStep = getStepFromContent(action.payload);\n        },\n        setActiveStep: (state, action) => {\n            state.activeContent = getContentFromStep(action.payload);\n            state.activeStep = action.payload;\n        }\n    }\n});\n\nexport const {\n    setActiveContent,\n    setActiveStep\n} = navigationSlice.actions;\n\nexport default navigationSlice.reducer;\n","export const Gender = {\n    FEMALE: 'W',\n    MALE: 'M'\n};\n\nexport const Ages = [ 9, 10, 11, 12, 13, 14 ];\n\nexport const Group = {\n    A: 'Kinder',\n    B: 'Schüler'\n};\n\nexport const AgesPerGroup = {\n    [Group.A]: [ 9, 10, 11, 12 ],\n    [Group.B]: [ 13, 14 ]\n};\n\nexport const Discipline = {\n    PUSH: 'Bankdrücken',\n    PULL: 'Zug liegend',\n    PULL_UP: 'Klimmziehen',\n    T2B: 'Anristen',\n    SCHO: 'SCHO',\n    H1: 'H1',\n    LT: 'LT',\n    DR_M: '30m',\n    SW: 'SW',\n    SD: 'SD',\n    PL: 'PL',\n    GYM: 'Turnen'\n};\n\nexport const Exceptional = {\n    GYMNASTICS: Discipline.GYM\n};","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { requestService } from 'harbor-js';\nimport { Discipline, Group } from '../../app/lib/values';\n\nfunction getDraftEvent() {\n    return {\n        id: 0,\n        name: '',\n        date: new Date().toISOString().split('T')[0],\n        place: '',\n        host: '',\n        start: '16:30',\n        disciplines: Object.values(Discipline).reduce((r, e) => ({ ...r, [e]: false }), {}),\n        gymnastics: {\n            [Group.A]: '',\n            [Group.B]: ''\n        },\n        competitorIds: []\n    };\n}\n\nexport const getEvents = createAsyncThunk(\n    'events/getEvents',\n    async ids => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/get_events`, ids);\n    }\n);\n\nexport const deleteEvent = createAsyncThunk(\n    'events/deleteEvent',\n    async id => {\n        return await requestService.get(`${requestService.baseUrl}/tsc/delete_event/${id}`);\n    }\n);\n\nexport const saveEvent = createAsyncThunk(\n    'events/saveEvent',\n    async event => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/upsert_event`, event);\n    }\n);\n\nexport const eventsSlice = createSlice({\n    name: 'events',\n    initialState: {\n        all: {},\n        activeId: 0,\n        draft: getDraftEvent()\n    },\n    reducers: {\n        resetEvents: state => {\n            state.activeId = 0;\n            state.draft = getDraftEvent();\n        },\n        setEventId: (state, action) => {\n            state.activeId = action.payload;\n        },\n        addCompetitorId: (state, action) => {\n            if (!state.activeId) {\n                return;\n            }\n            state.all[state.activeId].competitorIds.push(action.payload);\n        },\n        removeCompetitorId: (state, action) => {\n            if (!state.activeId) {\n                return;\n            }\n            const activeEvent = state.all[state.activeId];\n            activeEvent.competitorIds.splice(activeEvent.competitorIds.indexOf(action.payload), 1);\n        },\n        editEvent: (state, action) => {\n            state.draft = state.all[action.payload];\n        },\n        setName: (state, action) => {\n            state.draft.name = action.payload;\n        },\n        setDate: (state, action) => {\n            state.draft.date = action.payload;\n        },\n        setPlace: (state, action) => {\n            state.draft.place = action.payload;\n        },\n        setHost: (state, action) => {\n            state.draft.host = action.payload;\n        },\n        setStart: (state, action) => {\n            state.draft.start = action.payload;\n        },\n        toggleDiscipline: (state, action) => {\n            state.draft.disciplines[action.payload] = !state.draft.disciplines[action.payload];\n        },\n        setGymnastics: (state, action) => {\n            if (!action.payload.group) {\n                return;\n            }\n            state.draft.gymnastics[action.payload.group] = action.payload.gymnastics;\n        }\n    },\n    extraReducers: {\n        [getEvents.fulfilled]: (state, action) => {\n            if (!Array.isArray(action.payload)) {\n                console.warn('error getting events');\n                return;\n            }\n            state.all = action.payload.reduce((r, e) => ({ ...r, [e.id]: e }), {});\n        },\n        [deleteEvent.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error deleting event');\n                return;\n            }\n            if (state.activeId === Number(action.payload.id)) {\n                state.activeId = 0;\n            }\n            delete state.all[action.payload.id];\n        },\n        [saveEvent.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error saving event');\n                return;\n            }\n            state.all[action.payload.event.id] = action.payload.event;\n            state.activeId = action.payload.event.id;\n            state.draft = getDraftEvent();\n        }\n    }\n});\n\nexport const {\n    resetEvents,\n    setEventId,\n    addCompetitorId,\n    removeCompetitorId,\n    editEvent,\n    setName,\n    setDate,\n    setPlace,\n    setHost,\n    setStart,\n    toggleDiscipline,\n    setGymnastics\n} = eventsSlice.actions;\n\nexport default eventsSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { requestService } from 'harbor-js';\nimport { Gender } from '../../app/lib/values';\n\nfunction getDraftCompetitor() {\n    return {\n        id: 0,\n        name: '',\n        gender: Gender.FEMALE,\n        year: new Date().toISOString().split('T')[0].split('-')[0] - 9,\n        weight: 0,\n        club: '',\n        results: {}\n    };\n}\n\nexport const getCompetitors = createAsyncThunk(\n    'competitors/getCompetitors',\n    async ids => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/get_competitors`, ids);\n    }\n);\n\nexport const deleteCompetitor = createAsyncThunk(\n    'competitors/deleteCompetitor',\n    async id => {\n        return await requestService.get(`${requestService.baseUrl}/tsc/delete_competitor/${id}`);\n    }\n);\n\nexport const saveCompetitor = createAsyncThunk(\n    'competitors/saveCompetitor',\n    async competitor => {\n        return await requestService.post(`${requestService.baseUrl}/tsc/upsert_competitor`, competitor);\n    }\n);\n\nexport const competitorsSlice = createSlice({\n    name: 'competitors',\n    initialState: {\n        all: {},\n        draft: getDraftCompetitor()\n    },\n    reducers: {\n        resetCompetitors: state => {\n            state.draft = getDraftCompetitor();\n        },\n        editCompetitor: (state, action) => {\n            state.draft = state.all[action.payload];\n        },\n        setName: (state, action) => {\n            state.draft.name = action.payload;\n        },\n        setGender: (state, action) => {\n            state.draft.gender = action.payload;\n        },\n        setYear: (state, action) => {\n            state.draft.year = action.payload;\n        },\n        setWeight: (state, action) => {\n            state.draft.weight = action.payload;\n        },\n        setClub: (state, action) => {\n            state.draft.club = action.payload;\n        },\n        setResult: (state, action) => {\n            if (!action.payload.eventId) {\n                console.warn('you tried to set a result without an event id');\n                return;\n            }\n            if (!action.payload.competitorId) {\n                console.warn('you tried to set a result without a competitor id');\n                return;\n            }\n            if (!state.all[action.payload.competitorId].results[action.payload.eventId]) {\n                state.all[action.payload.competitorId].results[action.payload.eventId] = {};\n            }\n            state.all[action.payload.competitorId].results[action.payload.eventId][action.payload.discipline] = action.payload.result;\n        }\n    },\n    extraReducers: {\n        [getCompetitors.fulfilled]: (state, action) => {\n            if (!Array.isArray(action.payload)) {\n                console.warn('error getting competitors');\n                return;\n            }\n            state.all = action.payload.reduce((r, e) => ({ ...r, [e.id]: e }), state.all);\n        },\n        [deleteCompetitor.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error deleting competitor');\n                return;\n            }\n            delete state.all[action.payload.id];\n        },\n        [saveCompetitor.fulfilled]: (state, action) => {\n            if (!action.payload?.success) {\n                console.warn('error saving competitor');\n                return;\n            }\n            state.all[action.payload.competitor.id] = action.payload.competitor;\n            state.draft = getDraftCompetitor();\n        }\n    }\n});\n\nexport const {\n    resetCompetitors,\n    editCompetitor,\n    setName,\n    setGender,\n    setYear,\n    setWeight,\n    setClub,\n    setResult\n} = competitorsSlice.actions;\n\nexport default competitorsSlice.reducer;\n","import navigation from '../features/Navigation/navigationSlice';\nimport events from '../features/Events/eventsSlice';\nimport competitors from '../features/Competitors/competitorsSlice';\n\nconst reducer = {\n    navigation,\n    events,\n    competitors\n};\n\nexport default reducer;","export const defaultValues = {\n    ARRAY: [],\n    OBJECT: {},\n    FUNCTION: () => {}\n}","import { defaultValues } from './lib/helpers';\n\nexport const selectActiveEvent = state => state.events.activeId ? state.events.all[state.events.activeId] : defaultValues.OBJECT;\n\nexport const selectActiveCompetitors = state => {\n    const activeEvent = selectActiveEvent(state);\n    const competitorIds = activeEvent.competitorIds || [];\n    return Object.keys(state.competitors.all).reduce((r, e) => competitorIds.includes(Number(e)) ? [ ...r, state.competitors.all[e] ] : r, []);\n};","import { useState } from 'react';\nimport { Dialog, DialogContent, TextField } from '@material-ui/core';\n\nconst auth = 'fest';\n\n\nfunction AuthWall() {\n    const [ open, setOpen ] = useState(true);\n\n    return (\n        <div>\n            <Dialog open={open} onClose={() => {}} aria-labelledby=\"form-dialog-title\">\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"pw\"\n                        label={<span className=\"material-icons\">vpn_key</span>}\n                        type=\"password\"\n                        fullWidth\n                        onChange={event => {\n                            if (event.target.value !== auth) {\n                                return;\n                            }\n                            setOpen(false);\n                        }}\n                    />\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default AuthWall;","import { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Stepper, Step, StepLabel, StepConnector } from '@material-ui/core';\nimport { steps, setActiveStep } from '../navigationSlice';\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 22\n    },\n    active: {\n        '& $line': {\n            backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n        }\n    },\n    completed: {\n        '& $line': {\n            backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n        }\n    },\n    line: {\n        height: 3,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1\n    }\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer'\n    },\n    active: {\n        backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    },\n    completed: {\n        backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n    }\n});\n\nfunction ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const { active, completed } = props;\n\n    const icons = {\n        1: <span className=\"material-icons\">event_note</span>,\n        2: <span className=\"material-icons\">people_alt</span>,\n        3: <span className=\"material-icons\">emoji_events</span>\n    };\n\n    return (\n        <div className={`${classes.root}${active ? ` ${classes.active}` : ''}${completed ? ` ${classes.completed}` : ''}`}>\n            {icons[String(props.icon)]}\n        </div>\n    );\n}\n\n\nfunction TopNavigation() {\n    const dispatch = useDispatch();\n    const activeStep = useSelector(state => state.navigation.activeStep);\n\n    return (\n        <Stepper className=\"top-navigation-stepper\" alternativeLabel activeStep={steps.indexOf(activeStep)} connector={<ColorlibConnector/>}>\n            {steps.map(step => (\n                <Step\n                    key={step}\n                    onClick={() => dispatch(setActiveStep(step))}\n                >\n                    <StepLabel StepIconComponent={ColorlibStepIcon} />\n                </Step>\n            ))}\n        </Stepper>\n    );\n}\n\nexport default TopNavigation;","import { useSelector, useDispatch } from 'react-redux';\nimport s from './BottomNavigation.module.css';\nimport { ActiveContent, setActiveContent } from '../navigationSlice';\nimport { saveCompetitor } from '../../Competitors/competitorsSlice';\nimport { Fab } from '@material-ui/core';\n\n\nfunction BottomNavigation() {\n    const dispatch = useDispatch();\n    const vw = useSelector(state => state.harbor.vw);\n    const cw = useSelector(state => state.harbor.cw);\n    const activeContent = useSelector(state => state.navigation.activeContent);\n\n    let onCta = null;\n    let ctaIcon = '';\n    let ctaColor = '';\n\n    switch (activeContent) {\n        case ActiveContent.EVENT_LIST:\n            onCta = () => dispatch(setActiveContent(ActiveContent.EVENT_MANAGER));\n            ctaIcon = 'add';\n            ctaColor = 'primary';\n            break;\n        case ActiveContent.EVENT_MANAGER:\n            onCta = () => dispatch(setActiveContent(ActiveContent.EVENT_LIST));\n            ctaIcon = 'clear';\n            ctaColor = 'secondary';\n            break;\n        case ActiveContent.COMPETITOR_LIST:\n            onCta = () => dispatch(setActiveContent(ActiveContent.COMPETITOR_MANAGER));\n            ctaIcon = 'add';\n            ctaColor = 'primary';\n            break;\n        case ActiveContent.COMPETITOR_MANAGER:\n            onCta = () => {\n                dispatch(saveCompetitor());\n                dispatch(setActiveContent(ActiveContent.COMPETITOR_LIST));\n            };\n            ctaIcon = 'clear';\n            ctaColor = 'secondary';\n            break;\n        case ActiveContent.WORK_SPACE:\n            onCta = () => console.log('Printing...');\n            ctaIcon = 'print';\n            ctaColor = 'primary';\n            break;\n        default:\n            ctaIcon = 'add';\n            ctaColor = 'primary';\n    }\n\n    return (\n        <footer\n            className={s.BottomNavigation}\n            style={{ width: `${cw}px`, margin: `0 ${(vw - cw) / 2}px` }}\n        >\n            <div className={s.Cta}>\n                <Fab\n                    color={ctaColor}\n                    aria-label=\"add\"\n                    onClick={onCta}\n                >\n                    <span className=\"material-icons\">\n                        {ctaIcon}\n                    </span>\n                </Fab>\n            </div>\n        </footer>\n    );\n}\n\nexport default BottomNavigation;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useListStyles = makeStyles(theme => ({\n    card: {\n        margin: '10px 0'\n    },\n    cardActive: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    cardContent: {\n        display: 'grid',\n        gridTemplateColumns: 'auto 160px'\n    },\n    cardActions: {\n        justifySelf: 'end',\n        alignSelf: 'start'\n    },\n    contrastText: {\n        color: theme.palette.grey['100']\n    },\n    gymnasticsTag: {\n        color: theme.palette.primary.main\n    }\n}));\n\nexport const useManagerStyles = makeStyles(theme => ({\n    card: {\n        margin: '10px 0'\n    },\n    flexRow: {\n        display: 'flex'\n    },\n    gridRow: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n        gridGap: '10px'\n    },\n    spacer: {\n        width: '10px',\n        flexShrink: 0\n    },\n    marginTop: {\n        marginTop: '15px'\n    }\n}));\n\nexport const useWorkSpaceStyles = makeStyles(theme => ({\n    card: {\n        margin: '10px 0'\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    editor: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridGap: '10px'\n    },\n    editorEntry: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center'\n    },\n    editorIcon: {\n        color: theme.palette.grey['300']\n    },\n    editorPoints: {\n        marginLeft: '10px'\n    },\n    gymnasticsResult: {\n        alignSelf: 'center',\n        display: 'flex',\n        alignItems: 'center'\n    },\n    marginTop: {\n        marginTop: '15px'\n    }\n}));\n\nexport const useFilterStyles = makeStyles(theme => ({\n    filter: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '10px'\n    },\n    filterGroup: {\n        marginRight: '10px'\n    }\n}));","import { useState, useRef, useEffect } from 'react';\n\n\nfunction useInterval(interval, cb) {\n    const [ active, setActive ] = useState(true);\n    const idRef = useRef({ id: 0 });\n\n    useEffect(() => {\n        if (!active) {\n            return;\n        }\n        const req = () => {\n            cb();\n            idRef.current.id = setTimeout(() => req(), interval * 1000);\n        };\n        req();\n        return () => clearTimeout(idRef.current.id);\n    }, [ active, interval, cb ]);\n\n    return [ active, setActive ];\n}\n\nexport default useInterval;","import { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, CardActions, Typography, Button, IconButton } from '@material-ui/core';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { deleteEvent, setEventId, editEvent, getEvents } from '../eventsSlice';\nimport { Exceptional } from '../../../app/lib/values';\nimport { isObject } from 'harbor-js';\nimport { useListStyles } from '../../../app/styleHooks';\nimport useInterval from '../../../app/lib/hooks/useInterval';\n\nconst refreshTime = 15;\n\n\nfunction EventList() {\n    const dispatch = useDispatch();\n    const events = useSelector(state => state.events.all);\n    const activeEventId = useSelector(state => state.events.activeId);\n    const classes = useListStyles();\n\n    const [ eventList, setEventList ] = useState([]);\n    const [ deleteIndex, setDeleteIndex ] = useState(-1);\n\n    const refresh = useCallback(() => dispatch(getEvents()), [ dispatch ]);\n    useInterval(refreshTime, refresh);\n\n    useEffect(() => {\n        if (!isObject(events)) {\n            return;\n        }\n        setEventList(\n            Object.values(events).sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n        );\n    }, [ events ]);\n\n    return (\n        <div>\n            {!!eventList.length && eventList.map((event, i) => {\n                const active = event.id === activeEventId;\n                return (\n                    <Card\n                        key={i}\n                        className={`${classes.card} ${active && classes.cardActive}`}\n                        elevation={3}\n                        onClick={() => {\n                            dispatch(setEventId(event.id));\n                            dispatch(setActiveContent(ActiveContent.WORK_SPACE));\n                        }}\n                    >\n                        <CardContent>\n                            <div className={classes.cardContent}>\n                                <div>\n                                    <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                        {event.date.split('-').reverse().join('.')} / {event.start} Uhr\n                                    </Typography>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        {event.name}\n                                    </Typography>\n                                </div>\n                                <CardActions className={classes.cardActions}>\n                                    {deleteIndex === i ? (\n                                        <>\n                                            <IconButton\n                                                className={active ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">clear</span>\n                                            </IconButton>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    dispatch(deleteEvent(event.id));\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </Button>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <IconButton\n                                                className={active ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    dispatch(editEvent(event.id));\n                                                    dispatch(setActiveContent(ActiveContent.EVENT_MANAGER));\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">edit</span>\n                                            </IconButton>\n                                            <IconButton\n                                                className={active ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(i);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </IconButton>\n                                        </>\n                                    )}\n                                </CardActions>\n                            </div>\n                            {(event.place || event.host) && (\n                                <Typography variant=\"caption\" color=\"textSecondary\" display=\"block\" paragraph>\n                                    {`${event.place}${(event.place && event.host) ? ' | ' : ''}${event.host}`}\n                                </Typography>\n                            )}\n                            <Typography variant=\"body1\">\n                                {Object.keys(event.disciplines).reduce((r, e) => event.disciplines[e] ? `${r}${r.length ? ', ' : ''}${e}` : r, '')}\n                            </Typography>\n                            {event.disciplines[Exceptional.GYMNASTICS] && Object.keys(event.gymnastics).map(key => (\n                                <Typography key={key} variant=\"caption\" color=\"textSecondary\" display=\"block\">\n                                    <span className={classes.gymnasticsTag}>Turnen {key}:</span> {event.gymnastics[key]}\n                                </Typography>\n                            ))}\n                        </CardContent>\n                    </Card>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default EventList;","export function getAge(birthYear) {\n    return new Date().getFullYear() - Number(birthYear);\n}\n\nexport function getBirthYear(age) {\n    return new Date().getFullYear() - age;\n}","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, CardActions, Button, Checkbox, FormControlLabel, FormGroup, TextField } from '@material-ui/core';\nimport { saveEvent, resetEvents, setName, setDate, setPlace, setHost, setStart, toggleDiscipline, setGymnastics } from '../eventsSlice';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { AgesPerGroup, Exceptional } from '../../../app/lib/values';\nimport { getBirthYear } from '../../../app/lib/getters/year';\nimport { useManagerStyles } from '../../../app/styleHooks';\n\nconst marginProp = 'dense';\n\n\nfunction EventManager() {\n    const dispatch = useDispatch();\n    const id = useSelector(state => state.events.draft.id);\n    const name = useSelector(state => state.events.draft.name);\n    const date = useSelector(state => state.events.draft.date);\n    const place = useSelector(state => state.events.draft.place);\n    const host = useSelector(state => state.events.draft.host);\n    const start = useSelector(state => state.events.draft.start);\n    const disciplines = useSelector(state => state.events.draft.disciplines);\n    const gymnastics = useSelector(state => state.events.draft.gymnastics);\n    const competitorIds = useSelector(state => state.events.draft.competitorIds);\n\n    const classes = useManagerStyles();\n\n    useEffect(() => () => dispatch(resetEvents()), [ dispatch ]);\n\n    const saveAndExit = () => {\n        dispatch(saveEvent({\n            id,\n            name,\n            date,\n            place,\n            host,\n            start,\n            disciplines,\n            gymnastics,\n            competitorIds\n        }));\n        if (id === 0) {\n            dispatch(setActiveContent(ActiveContent.COMPETITOR_LIST));\n            return;\n        }\n        dispatch(setActiveContent(ActiveContent.WORK_SPACE));\n    };\n\n    return (\n        <Card\n            elevation={3}\n            className={classes.card}\n            onKeyDown={event => {\n                if (event.key !== 'Enter') {\n                    return;\n                }\n                saveAndExit();\n            }}\n        >\n            <CardContent>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"filled-name\"\n                        label=\"Wettbewerb\"\n                        variant=\"filled\"\n                        value={name}\n                        onChange={event => dispatch(setName(event.target.value))}\n                        margin={marginProp}\n                        fullWidth\n                    />\n                    <div className={classes.flexRow}>\n                        <TextField\n                            id=\"date\"\n                            label=\"Datum\"\n                            type=\"date\"\n                            variant=\"filled\"\n                            value={date}\n                            onChange={event => dispatch(setDate(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                        <div className={classes.spacer} />\n                        <TextField\n                            id=\"time\"\n                            label=\"Beginn\"\n                            type=\"time\"\n                            variant=\"filled\"\n                            value={start}\n                            onChange={event => dispatch(setStart(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                            inputProps={{\n                                step: 300, // 5 min\n                            }}\n                        />\n                    </div>\n                    <div className={classes.flexRow}>\n                        <TextField\n                            id=\"filled-place\"\n                            label=\"Wettkampf Ort\"\n                            variant=\"filled\"\n                            value={place}\n                            onChange={event => dispatch(setPlace(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                        <div className={classes.spacer} />\n                        <TextField\n                            id=\"filled-host\"\n                            label=\"Ausrichter\"\n                            variant=\"filled\"\n                            value={host}\n                            onChange={event => dispatch(setHost(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                    </div>\n\n                    <FormGroup row>\n                        {Object.keys(disciplines).map(key => (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={disciplines[key]}\n                                        onChange={() => dispatch(toggleDiscipline(key))}\n                                        name={key}\n                                        color={key === Exceptional.GYMNASTICS ? 'primary' : 'secondary'}\n                                    />\n                                }\n                                label={key}\n                                key={key}\n                            />\n                        ))}\n                    </FormGroup>\n\n                    {disciplines[Exceptional.GYMNASTICS] && Object.keys(gymnastics).map(key => {\n                        const ages = AgesPerGroup[key];\n                        return (\n                            <div key={key} className={classes.marginTop}>\n                                <h3>{`Turnen ${key} (Jahrgang ${getBirthYear(ages[ages.length - 1])} - ${getBirthYear(ages[0])})`}</h3>\n                                <TextField\n                                    id=\"outlined-multiline-flexible\"\n                                    label=\"Übungen\"\n                                    multiline\n                                    rowsMax={4}\n                                    variant=\"outlined\"\n                                    value={gymnastics[key]}\n                                    onChange={event => dispatch(setGymnastics({ group: key, gymnastics: event.target.value }))}\n                                    margin={marginProp}\n                                    fullWidth\n                                />\n                            </div>\n                        );\n                    })}\n\n                    <CardActions className={classes.marginTop}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={saveAndExit}\n                        >\n                            Fertig\n                        </Button>\n                    </CardActions>\n                </form>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default EventManager;","import { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, CardActions, Typography, Button, IconButton } from '@material-ui/core';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { saveEvent, addCompetitorId, removeCompetitorId } from '../../Events/eventsSlice';\nimport { deleteCompetitor, editCompetitor, getCompetitors } from '../competitorsSlice';\nimport { useListStyles } from '../../../app/styleHooks';\nimport { selectActiveEvent } from '../../../app/selectors';\nimport { isObject } from 'harbor-js';\nimport { defaultValues } from '../../../app/lib/helpers';\nimport useInterval from '../../../app/lib/hooks/useInterval';\n\nconst refreshTime = 15;\n\n\nfunction CompetitorList() {\n    const dispatch = useDispatch();\n    const competitors = useSelector(state => state.competitors.all);\n    const activeEvent = useSelector(selectActiveEvent);\n    const selectedCompetitorIds = activeEvent.competitorIds || defaultValues.ARRAY;\n\n    const classes = useListStyles();\n\n    const [ competitorList, setCompetitorList ] = useState([]);\n    const [ deleteIndex, setDeleteIndex ] = useState(-1);\n    const [ doSave, setDoSave ] = useState(false);\n\n    const refresh = useCallback(() => dispatch(getCompetitors()), [ dispatch ]);\n    useInterval(refreshTime, refresh);\n\n    useEffect(() => {\n        if (!isObject(competitors)) {\n            return;\n        }\n        setCompetitorList(\n            Object.values(competitors).sort((a, b) => a.name.charCodeAt(0) - b.name.charCodeAt(0))\n        );\n    }, [ competitors ]);\n\n    useEffect(() => {\n        if (!doSave) {\n            return;\n        }\n        dispatch(saveEvent(activeEvent));\n        setDoSave(false);\n    }, [ dispatch, activeEvent, doSave ]);\n\n    return (\n        <div>\n            {!!competitorList.length && competitorList.map((competitor, i) => {\n                const noActiveEvent = !activeEvent.id;\n                const selected = selectedCompetitorIds.includes(competitor.id);\n                return (\n                    <Card\n                        key={i}\n                        className={`${classes.card} ${selected && classes.cardActive}`}\n                        elevation={3}\n                        onClick={() => {\n                            if (noActiveEvent) {\n                                return;\n                            }\n                            dispatch(selected ? removeCompetitorId(competitor.id) : addCompetitorId(competitor.id));\n                            setDoSave(true);\n                        }}\n                    >\n                        <CardContent>\n                            <div className={classes.cardContent}>\n                                <div>\n                                    <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                        {`${competitor.year} | ${competitor.gender}${competitor.weight ? ` | ${competitor.weight} kg` : ''}`}\n                                    </Typography>\n                                    <Typography variant=\"h6\" color=\"textPrimary\">\n                                        {competitor.name}\n                                    </Typography>\n                                </div>\n                                <CardActions className={classes.cardActions}>\n                                    {deleteIndex === i ? (\n                                        <>\n                                            <IconButton\n                                                className={selected ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">clear</span>\n                                            </IconButton>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    dispatch(deleteCompetitor(competitor.id));\n                                                    setDeleteIndex(-1);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </Button>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <IconButton\n                                                className={selected ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    dispatch(editCompetitor(competitor.id));\n                                                    dispatch(setActiveContent(ActiveContent.COMPETITOR_MANAGER));\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">edit</span>\n                                            </IconButton>\n                                            <IconButton\n                                                className={selected ? classes.contrastText : ''}\n                                                onClick={e => {\n                                                    e.stopPropagation();\n                                                    setDeleteIndex(i);\n                                                }}\n                                            >\n                                                <span className=\"material-icons\">delete</span>\n                                            </IconButton>\n                                        </>\n                                    )}\n                                </CardActions>\n                            </div>\n                            <Typography variant=\"caption\" color=\"textSecondary\" display=\"block\">\n                                {competitor.club || 'Kein Verein'}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default CompetitorList;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, CardActions, Button, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport {\n    resetCompetitors,\n    setName,\n    setGender,\n    setYear,\n    setWeight,\n    setClub,\n    saveCompetitor\n} from '../competitorsSlice';\nimport { ActiveContent, setActiveContent } from '../../Navigation/navigationSlice';\nimport { Gender, Ages } from '../../../app/lib/values';\nimport { getBirthYear } from '../../../app/lib/getters/year';\nimport { useManagerStyles } from '../../../app/styleHooks';\n\nconst marginProp = 'dense';\n\n\nfunction CompetitorManager() {\n    const dispatch = useDispatch();\n    const id = useSelector(state => state.competitors.draft.id);\n    const name = useSelector(state => state.competitors.draft.name);\n    const gender = useSelector(state => state.competitors.draft.gender);\n    const year = useSelector(state => state.competitors.draft.year);\n    const weight = useSelector(state => state.competitors.draft.weight);\n    const club = useSelector(state => state.competitors.draft.club);\n    const results = useSelector(state => state.competitors.draft.results);\n\n    const classes = useManagerStyles();\n\n    useEffect(() => () => dispatch(resetCompetitors()), [ dispatch ]);\n\n    const saveAndExit = () => {\n        dispatch(saveCompetitor({\n            id,\n            name,\n            gender,\n            year,\n            weight,\n            club,\n            results\n        }));\n        dispatch(setActiveContent(ActiveContent.COMPETITOR_LIST));\n    };\n\n    return (\n        <Card\n            elevation={3}\n            className={classes.card}\n            onKeyDown={event => {\n                if (event.key !== 'Enter') {\n                    return;\n                }\n                saveAndExit();\n            }}\n        >\n            <CardContent>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"filled-name\"\n                        label=\"Name\"\n                        variant=\"filled\"\n                        value={name}\n                        onChange={event => dispatch(setName(event.target.value))}\n                        margin={marginProp}\n                        fullWidth\n                    />\n                    <TextField\n                        id=\"filled-club\"\n                        label=\"Verein\"\n                        variant=\"filled\"\n                        value={club}\n                        onChange={event => dispatch(setClub(event.target.value))}\n                        margin={marginProp}\n                        fullWidth\n                    />\n                    <div className={classes.gridRow}>\n                        <FormControl margin={marginProp}>\n                            <InputLabel id=\"demo-simple-select-label-gender\">Geschlecht</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label-gender\"\n                                id=\"demo-simple-select-gender\"\n                                value={gender}\n                                onChange={event => dispatch(setGender(event.target.value))}\n                            >\n                                {Object.values(Gender).map(e => (\n                                    <MenuItem key={e} value={e}>{e}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <FormControl margin={marginProp}>\n                            <InputLabel id=\"demo-simple-select-label-year\">Jahrgang</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label-year\"\n                                id=\"demo-simple-select-year\"\n                                value={year}\n                                onChange={event => dispatch(setYear(event.target.value))}\n                            >\n                                {Ages.map(age => getBirthYear(age)).map(e => (\n                                    <MenuItem key={e} value={e}>{e}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            id=\"filled-weight\"\n                            label=\"Gewicht\"\n                            type=\"number\"\n                            variant=\"filled\"\n                            value={weight}\n                            onChange={event => dispatch(setWeight(event.target.value))}\n                            margin={marginProp}\n                            fullWidth\n                        />\n                    </div>\n\n                    <CardActions className={classes.marginTop}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={saveAndExit}\n                        >\n                            Fertig\n                        </Button>\n                    </CardActions>\n                </form>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default CompetitorManager;","import { Discipline, Exceptional } from '../values';\n\nfunction createTable(inStart, inEnd, outStart, outEnd) {\n    return function(val) {\n        return Math.max(Math.round((outStart - outEnd) * (val - inStart) / (inStart - inEnd) + outStart), 0);\n    }\n}\n\nconst getters = {\n    // Jan 2020: 15 reps with 2 points each\n    [Discipline.PUSH]: createTable(0, 15, 0, 30),\n    [Discipline.PULL]: createTable(0, 15, 0, 30),\n    [Discipline.PULL_UP]: createTable(0, 15, 0, 30),\n    [Discipline.T2B]: createTable(0, 15, 0, 30),\n    // Jan 2020: values from printed table\n    [Discipline.H1]: createTable(10, 15.7, 45, 16),\n    [Discipline.LT]: createTable(11, 16, 50, 0),\n    [Discipline.DR_M]: createTable(4.3, 6.3, 40, 0),\n    [Discipline.SW]: createTable(1.35, 2.85, 0, 50),\n    [Discipline.SD]: createTable(4, 9, 0, 50),\n    [Discipline.SCHO]: createTable(3, 13, 0, 50),\n    [Discipline.PL]: createTable(9, 14, 50, 0),\n    // Jan 2020: coach inputs gymnastics points sum, result outputs x3\n    [Discipline.GYM]: createTable(0, 10, 0, 30)\n};\n\nexport const calcPointsForExceptional = {\n    [Exceptional.GYMNASTICS]: result => Object.values(result).reduce((r, e) => r + e, 0)\n};\n\nexport function getPoints(disc, result) {\n    const fn = getters[disc];\n    if (typeof fn !== 'function') {\n        return 0;\n    }\n    if (Object.values(Exceptional).includes(disc)) {\n        result = calcPointsForExceptional[disc](result);\n    }\n    return fn(result);\n}\n","import { getPoints } from '../../../app/lib/getters/points';\nimport { AgesPerGroup, Group } from '../../../app/lib/values';\nimport { getAge } from '../../../app/lib/getters/year';\n\nfunction addRanks(competitors, eventId) {\n    let curPoints = -1;\n    let curRank = 1;\n    const rankings = competitors\n        .reduce((r, e) => {\n            const results = e.results[eventId];\n            return [\n                ...r,\n                {\n                    id: e.id,\n                    points: results\n                        ? Object.keys(results).reduce((r, k) => results[k] ? r + getPoints(k, results[k]) : r, 0)\n                        : 0\n                }\n            ];\n        }, [])\n        .sort((a, b) => b.points - a.points)\n        .map(e => {\n            if (curPoints > e.points) {\n                curRank++;\n                curPoints = e.points;\n            }\n            if (curPoints === -1) {\n                curPoints = e.points;\n            }\n            return {\n                ...e,\n                rank: curRank\n            };\n        });\n    return competitors.map(c => {\n        const ranking = rankings.find(e => e.id === c.id);\n        const { points, rank } = ranking;\n        return {\n            ...c,\n            points,\n            rank\n        };\n    });\n}\n\nexport function getRanks(competitors, eventId) {\n    const ranksByGroups = {};\n    Object.values(Group).forEach(name => {\n        ranksByGroups[name] = competitors.filter(e => AgesPerGroup[name].includes(getAge(e.year)));\n    });\n    return Object.values(ranksByGroups).reduce((r, e) => [ ...r, ...addRanks(e, eventId) ], []);\n}\n","import { Gender, Ages, Discipline } from '../values';\nimport { getAge } from './year';\n\nconst weights = {\n    [Gender.FEMALE]: {\n        [Discipline.SCHO]: [ 2, 2, 2, 2, 3, 3 ],\n        [Discipline.PUSH]: [ 40, 45, 50, 55, 60, 65 ],\n        [Discipline.PULL]: [ 40, 45, 50, 50, 55, 60 ]\n    },\n    [Gender.MALE]: {\n        [Discipline.SCHO]: [ 2, 2, 3, 3, 4, 4 ],\n        [Discipline.PUSH]: [ 45, 50, 60, 65, 70, 75 ],\n        [Discipline.PULL]: [ 45, 50, 55, 60, 65, 70 ]\n    }\n};\n\nconst WeightType = {\n    KG: 'kg',\n    PERCENT: 'percent'\n};\n\nconst weightDisciplines = {\n    [Discipline.SCHO]: WeightType.KG,\n    [Discipline.PUSH]: WeightType.PERCENT,\n    [Discipline.PULL]: WeightType.PERCENT\n};\n\nexport function getWeight(birthYear, gender, bodyWeight, discipline) {\n    if (!weightDisciplines[discipline]) {\n        return 0;\n    }\n    const age = getAge(birthYear);\n    const weightValue = weights[gender][discipline][Ages.indexOf(age)];\n    switch (weightDisciplines[discipline]) {\n        case WeightType.KG:\n            return weightValue;\n        case WeightType.PERCENT:\n            return Math.round(bodyWeight * weightValue / 100);\n        default:\n    }\n}\n","import { useFilterStyles } from '../../styleHooks';\nimport { useEffect, useState } from 'react';\nimport { Button, ButtonGroup } from '@material-ui/core';\n\nfunction useFilters(filters) {\n    const classes = useFilterStyles();\n\n    const [ filterCallback, setFilterCallback ] = useState(() => () => true);\n    const [ filterList, setFilterList ] = useState([]);\n\n    useEffect(() => {\n        setFilterCallback(() => element => filterList.every(fn => typeof fn === 'function' ? fn(element) : true));\n    }, [ filterList, setFilterCallback ]);\n\n    const FilterComponent = () => (\n        <div className={classes.filter}>\n            {filters.map((filterGroup, i) => {\n                return (\n                    <ButtonGroup\n                        variant=\"contained\"\n                        key={i}\n                        className={classes.filterGroup}\n                    >\n                        {Object.keys(filterGroup).map(name => {\n                            const active = filterList[i] === filterGroup[name];\n                            return (\n                                <Button\n                                    key={name}\n                                    color={active ? 'primary' : 'default'}\n                                    onClick={() => setFilterList(prevState => {\n                                        const result = [ ...prevState ];\n                                        if (active) {\n                                            result[i] = undefined;\n                                        } else {\n                                            result[i] = filterGroup[name];\n                                        }\n                                        return result;\n                                    })}\n                                >\n                                    {name}\n                                </Button>\n                            );\n                        })}\n                    </ButtonGroup>\n                );\n            })}\n        </div>\n    );\n\n    return [ filterCallback, FilterComponent ];\n}\n\nexport default useFilters;","import { useDispatch } from 'react-redux';\nimport { useWorkSpaceStyles } from '../../../app/styleHooks';\nimport { AgesPerGroup, Exceptional, Group } from '../../../app/lib/values';\nimport { getAge } from '../../../app/lib/getters/year';\nimport { useEffect, useState } from 'react';\nimport { setResult } from '../../Competitors/competitorsSlice';\nimport { getPoints } from '../../../app/lib/getters/points';\nimport { FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\n\n\nfunction GymnasticsList({ event, competitor }) {\n    const dispatch = useDispatch();\n    const classes = useWorkSpaceStyles();\n\n    const gymnasticsList = event.gymnastics[Object.values(Group).find(e => AgesPerGroup[e].includes(getAge(competitor.year)))].split(', ');\n    const results = competitor.results?.[event.id]?.[Exceptional.GYMNASTICS];\n\n    const [ gymResults, setGymResults ] = useState(results ? results : gymnasticsList.reduce((r, e) => ({ ...r, [e]: 0 }), {}));\n\n    useEffect(() => {\n        dispatch(setResult({\n            eventId: event.id,\n            competitorId: competitor.id,\n            discipline: Exceptional.GYMNASTICS,\n            result: gymResults\n        }))\n    }, [ event.id, competitor.id, dispatch, gymResults ]);\n\n    const points = getPoints(Exceptional.GYMNASTICS, gymResults);\n\n    return (\n        <>\n            <Typography variant=\"overline\" paragraph className={classes.marginTop}>\n                {Exceptional.GYMNASTICS}\n            </Typography>\n            <div className={classes.editor}>\n                {gymnasticsList\n                    .map(name => (\n                        <FormControl key={name} style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                            <InputLabel id={`${name}-label`}>{name}</InputLabel>\n                            <Select\n                                labelId={`${name}-label`}\n                                id={`${name}`}\n                                value={gymResults[name]}\n                                onChange={event => setGymResults(prevState => {\n                                    const result = { ...prevState };\n                                    result[name] = event.target.value;\n                                    return result;\n                                })}\n                            >\n                                <MenuItem value={2}>2</MenuItem>\n                                <MenuItem value={1.5}>1,5</MenuItem>\n                                <MenuItem value={1}>1</MenuItem>\n                                <MenuItem value={0.5}>0,5</MenuItem>\n                                <MenuItem value={0}>0</MenuItem>\n                            </Select>\n                        </FormControl>\n                    ))\n                }\n                <div className={classes.gymnasticsResult}>\n                    <span className={`material-icons ${classes.editorIcon}`}>\n                        play_arrow\n                    </span>\n                    <Typography color=\"primary\" display=\"inline\" className={classes.editorPoints}>\n                        {points ? points : '--'}\n                    </Typography>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default GymnasticsList;","import { useEffect, useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Card, CardActions, CardContent, TextField, Typography } from '@material-ui/core';\nimport { selectActiveEvent, selectActiveCompetitors } from '../../app/selectors';\nimport { getCompetitors, saveCompetitor, setResult } from '../Competitors/competitorsSlice';\nimport { useWorkSpaceStyles } from '../../app/styleHooks';\nimport { getPoints } from '../../app/lib/getters/points';\nimport { getRanks } from './lib/util';\nimport { defaultValues } from '../../app/lib/helpers';\nimport { AgesPerGroup, Gender, Group, Exceptional } from '../../app/lib/values';\nimport { getAge } from '../../app/lib/getters/year';\nimport { getWeight } from '../../app/lib/getters/weights';\nimport useFilters from '../../app/lib/hooks/useFilters';\nimport useInterval from '../../app/lib/hooks/useInterval';\nimport GymnasticsList from './GymnasticsList/GymnasticsList';\n\nconst filters = [\n    {\n        [Gender.FEMALE]: competitor => competitor.gender === Gender.FEMALE,\n        [Gender.MALE]: competitor => competitor.gender === Gender.MALE\n    },\n    {\n        [Group.A]: competitor => AgesPerGroup[Group.A].includes(getAge(competitor.year)),\n        [Group.B]: competitor => AgesPerGroup[Group.B].includes(getAge(competitor.year))\n    }\n];\n\nconst inputMargin = 'dense';\nconst syncTime = 5;\n\n\nfunction WorkSpace() {\n    const dispatch = useDispatch();\n    const activeEvent = useSelector(selectActiveEvent);\n    const competitors = useSelector(selectActiveCompetitors);\n    const classes = useWorkSpaceStyles();\n\n    const [ competitorList, setCompetitorList ] = useState([]);\n    const [ activeCompetitorId, setActiveCompetitorId ] = useState(0);\n\n    const [ filterCallback, FilterComponent ] = useFilters(filters);\n\n    const competitorIds = activeEvent?.competitorIds || defaultValues.ARRAY;\n    const sync = useCallback(() => dispatch(getCompetitors(competitorIds.filter(id => id !== activeCompetitorId))), [ dispatch, activeCompetitorId, competitorIds ]);\n\n    useInterval(syncTime, sync);\n\n    useEffect(() => {\n        if (!Array.isArray(competitors)) {\n            return;\n        }\n        setCompetitorList(getRanks(competitors, activeEvent.id).sort((a, b) => a.name.charCodeAt(0) - b.name.charCodeAt(0)));\n    }, [ activeEvent.id, competitors ]);\n\n    if (!activeEvent.id) {\n        return null;\n    }\n\n    return (\n        <div>\n            <FilterComponent />\n            {!!competitorList.length && competitorList.filter(filterCallback).map((competitor, i) => {\n                const active = activeCompetitorId === competitor.id;\n                return (\n                    <Card\n                        key={i}\n                        className={`${classes.card}`}\n                        elevation={3}\n                        onClick={() => {\n                            if (activeCompetitorId) {\n                                dispatch(saveCompetitor(competitors.find(e => e.id === activeCompetitorId)));\n                            }\n                            setActiveCompetitorId(competitor.id);\n                        }}\n                    >\n                        <CardContent>\n                            <div className={classes.row}>\n                                <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                    {`${competitor.year} | ${competitor.gender}${competitor.weight ? ` | ${competitor.weight} kg` : ''}`}\n                                </Typography>\n                                <Typography variant=\"overline\" color=\"textSecondary\" display=\"block\">\n                                    Punkte {competitor.points}\n                                </Typography>\n                            </div>\n                            <div className={classes.row}>\n                                <Typography variant=\"h6\" color=\"textPrimary\">\n                                    {competitor.name}\n                                </Typography>\n                                <Typography variant=\"h6\" color=\"primary\">\n                                    Platz {competitor.rank}\n                                </Typography>\n                            </div>\n                            {active && (\n                                <>\n                                    <div className={classes.editor}>\n                                        {Object.keys(activeEvent.disciplines).filter(e => e !== Exceptional.GYMNASTICS).map(discipline => {\n                                            if (!activeEvent.disciplines[discipline]) {\n                                                return null;\n                                            }\n                                            const value = competitor.results[activeEvent.id]?.[discipline];\n                                            const weight = getWeight(competitor.year, competitor.gender, competitor.weight, discipline);\n                                            return (\n                                                <div key={discipline} className={classes.editorEntry}>\n                                                    <TextField\n                                                        id={`filled-${discipline}`}\n                                                        label={`${discipline}${weight ? ` ${weight} kg` : ''}`}\n                                                        type=\"number\"\n                                                        variant=\"filled\"\n                                                        value={value}\n                                                        onChange={event => dispatch(setResult({\n                                                            eventId: activeEvent.id,\n                                                            competitorId: competitor.id,\n                                                            discipline,\n                                                            result: event.target.value\n                                                        }))}\n                                                        margin={inputMargin}\n                                                    />\n                                                    <span className={`material-icons ${classes.editorIcon}`}>\n                                                        play_arrow\n                                                    </span>\n                                                    <Typography color=\"primary\" display=\"inline\" className={classes.editorPoints}>\n                                                        {value ? getPoints(discipline, value) : '--'}\n                                                    </Typography>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                    {Exceptional.GYMNASTICS && (\n                                        <GymnasticsList event={activeEvent} competitor={competitor} />\n                                    )}\n                                    <CardActions className={classes.marginTop}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={event => {\n                                                event.stopPropagation();\n                                                dispatch(saveCompetitor(competitors.find(e => e.id === competitor.id)));\n                                                setActiveCompetitorId(0);\n                                            }}\n                                        >\n                                            Fertig\n                                        </Button>\n                                    </CardActions>\n                                </>\n                            )}\n                        </CardContent>\n                    </Card>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default WorkSpace;","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Page, Header } from 'harbor-js';\nimport { ActiveContent } from './features/Navigation/navigationSlice';\nimport { selectActiveEvent } from './app/selectors';\n\nimport AuthWall from './features/AuthWall/AuthWall';\nimport TopNavigation from './features/Navigation/TopNavigation/TopNavigation';\nimport BottomNavigation from './features/Navigation/BottomNavigation/BottomNavigation';\nimport EventList from './features/Events/EventList/EventList';\nimport EventManager from './features/Events/EventManager/EventManager';\nimport CompetitorList from './features/Competitors/CompetitorList/CompetitorList';\nimport CompetitorManager from './features/Competitors/CompetitorManager/CompetitorManager';\nimport WorkSpace from './features/WorkSpace/WorkSpace';\n\nfunction getContent(activeContent) {\n    switch (activeContent) {\n        case ActiveContent.EVENT_LIST:\n            return <EventList />;\n        case ActiveContent.EVENT_MANAGER:\n            return <EventManager />;\n        case ActiveContent.COMPETITOR_LIST:\n            return <CompetitorList />;\n        case ActiveContent.COMPETITOR_MANAGER:\n            return <CompetitorManager />;\n        case ActiveContent.WORK_SPACE:\n            return <WorkSpace />;\n        default:\n            return <div>unknown active content</div>;\n    }\n}\n\n\nfunction App() {\n    const vh = useSelector(state => state.harbor.vh);\n    const activeEvent = useSelector(selectActiveEvent);\n    const activeEventName = activeEvent.name || '';\n    const activeContent = useSelector(state => state.navigation.activeContent);\n\n    useEffect(() => {\n        if (!activeEventName) {\n            document.title = 'TSC';\n            return;\n        }\n        document.title = activeEventName;\n    }, [ activeEventName ]);\n\n    return (\n        <>\n            <AuthWall />\n            <Header\n                height={Math.min(0.14 * vh, 110)}\n                bg=\"white\"\n                css={{\n                    overflow: 'hidden',\n                    boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)' // default theme shadow 4\n                }}\n            >\n                <TopNavigation />\n            </Header>\n            <Page>\n                {getContent(activeContent)}\n                <div style={{ height: '112px' }} />\n            </Page>\n            <BottomNavigation />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reducer from './app/reducer';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Harbor, requestService } from 'harbor-js';\n\n// requestService.setBaseUrl('http://localhost:5000');\n// requestService.setBaseUrl('http://192.168.1.3:5000');\nrequestService.setBaseUrl('https://server.glencoden.de');\n\nconst options = {\n    global: {\n        contentSize: {\n            width: 0.95,\n            height: 1\n        },\n        maxContentWidth: 640,\n        bg: '#e5e5e5'\n    },\n    theme: {\n        fonts: {\n            body: 'roboto, sans-serif'\n        }\n    },\n    reducer\n};\n\nReactDOM.render(\n    <Harbor options={options}>\n        <App/>\n    </Harbor>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BottomNavigation\":\"BottomNavigation_BottomNavigation__2CoWW\",\"Cta\":\"BottomNavigation_Cta__1wAwD\"};"],"sourceRoot":""}